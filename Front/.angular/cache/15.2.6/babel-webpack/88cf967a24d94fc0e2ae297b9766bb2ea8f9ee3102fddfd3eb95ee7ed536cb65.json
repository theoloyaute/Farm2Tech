{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.baseUrl = 'http://localhost:5276/api';\n    this.componentUrl = this.baseUrl + '/Users';\n  }\n  getUsers() {\n    const params = new HttpParams();\n    return this.http.get(this.componentUrl, {\n      params\n    });\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAoBA,UAAU,QAAO,sBAAsB;;;;AAM3D,OAAM,MAAOC,YAAY;EAKvBC,YACYC,MAAc,EACdC,IAAgB;IADhB,WAAM,GAAND,MAAM;IACN,SAAI,GAAJC,IAAI;IALN,YAAO,GAAG,2BAA2B;IAErC,iBAAY,GAAG,IAAI,CAACC,OAAO,GAAG,QAAQ;EAI5C;EAEJC,QAAQ;IACN,MAAMC,MAAM,GAAe,IAAIP,UAAU,EAAE;IAC3C,OAAO,IAAI,CAACI,IAAI,CAACI,GAAG,CAAC,IAAI,CAACC,YAAY,EAAE;MAACF;IAAM,CAAC,CAAC;EACnD;;AAbWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAS,SAAZT,YAAY;EAAAU,YAFX;AAAM","names":["HttpParams","UsersService","constructor","router","http","baseUrl","getUsers","params","get","componentUrl","factory","providedIn"],"sourceRoot":"","sources":["/Users/theoloyaute/RiderProjects/Farm2Tech/Front/src/app/services/users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  protected baseUrl = 'http://localhost:5276/api';\n\n  protected componentUrl = this.baseUrl + '/Users';\n  constructor(\n    protected router: Router,\n    protected http: HttpClient\n  ) { }\n\n  getUsers(): Observable<any>{\n    const params: HttpParams = new HttpParams();\n    return this.http.get(this.componentUrl, {params})\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}